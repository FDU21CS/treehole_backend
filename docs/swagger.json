{
    "swagger": "2.0",
    "info": {
        "description": "Treehole Backend",
        "title": "Treehole Backend",
        "contact": {
            "name": "Maintainer Chen Ke",
            "url": "https://danxi.fduhole.com/about",
            "email": "jingyijun@fduhole.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Map"
                        }
                    }
                }
            }
        },
        "/floors/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Get A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Modify A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.ModifyFloorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Delete A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.DeleteFloorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/holes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Old API for Listing Holes",
                "parameters": [
                    {
                        "enum": [
                            "created_at",
                            "updated_at"
                        ],
                        "type": "string",
                        "default": "created_at",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hole"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a hole, create floor binding to it and set the name mapping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Create A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "division id",
                        "name": "division_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateHoleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Hole"
                        }
                    }
                }
            }
        },
        "/holes/{hole_id}/floors": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "List Floors In A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hole id",
                        "name": "hole_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start_floor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Floor"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Create A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hole id",
                        "name": "hole_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateFloorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    }
                }
            }
        },
        "/holes/{id}": {
            "delete": {
                "description": "Hide a hole, but visible to admins. This may affect many floors, DO NOT ABUSE!!!",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Delete A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login with email and password, return jwt token, not need jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Logout, clear jwt credential and return successful message, logout, login required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Refresh jwt token with refresh token in header, login required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Refresh jwt token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.TokenResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "put": {
                "description": "reset password, reset jwt credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "reset password",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "验证码错误",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "register with email or phone, password and verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/apis.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "验证码错误、用户已注册",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/verify/email": {
            "get": {
                "description": "verify with email in query, Send verification email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "verify with email in query",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VerifyResponse"
                        }
                    },
                    "400": {
                        "description": "已注册“",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.CreateFloorRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "special_tag": {
                    "type": "string"
                }
            }
        },
        "apis.CreateHoleRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "special_tag": {
                    "type": "string"
                }
            }
        },
        "apis.DeleteFloorRequest": {
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "apis.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "apis.ModifyFloorRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "special_tag": {
                    "type": "string"
                }
            }
        },
        "apis.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "verification": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                }
            }
        },
        "apis.TokenResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "apis.VerifyResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "scope": {
                    "type": "string",
                    "enum": [
                        "register",
                        "reset"
                    ]
                }
            }
        },
        "models.Floor": {
            "type": "object",
            "properties": {
                "anonyname": {
                    "description": "a random username",
                    "type": "string"
                },
                "content": {
                    "description": "content of the floor, no more than 15000",
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "history": {
                    "description": "a floor has many history",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FloorHistory"
                    }
                },
                "hole_id": {
                    "type": "integer"
                },
                "id": {
                    "description": "/ saved fields",
                    "type": "integer"
                },
                "is_me": {
                    "description": "whether the user is the author of the floor",
                    "type": "boolean"
                },
                "modified": {
                    "description": "the modification times of floor.content",
                    "type": "integer"
                },
                "ranking": {
                    "description": "the ranking of this floor in the hole",
                    "type": "integer"
                },
                "special_tag": {
                    "description": "additional info, like \"树洞管理团队\"",
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                }
            }
        },
        "models.FloorHistory": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "floor_id": {
                    "type": "integer"
                },
                "id": {
                    "description": "/ base info",
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "The one who modified the floor",
                    "type": "integer"
                }
            }
        },
        "models.Hole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "floors": {
                    "description": "返回给前端的楼层列表，包括首楼、尾楼和预加载的前 n 个楼层",
                    "type": "object",
                    "properties": {
                        "first_floor": {
                            "description": "首楼",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Floor"
                                }
                            ]
                        },
                        "last_floor": {
                            "description": "尾楼",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Floor"
                                }
                            ]
                        },
                        "prefetch": {
                            "description": "预加载的楼层",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Floor"
                            }
                        }
                    }
                },
                "id": {
                    "description": "/ saved fields",
                    "type": "integer"
                },
                "reply": {
                    "description": "回复量（即该洞下 floor 的数量 - 1）",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Map": {
            "type": "object",
            "additionalProperties": {}
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "joined_time": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                }
            }
        },
        "utils.MessageResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}